{"version":3,"sources":["components/FetchData.js","components/Input.js","components/Form.js","components/Default.js","App.js","serviceWorker.js","index.js"],"names":["FetchData","props","state","flights","previous","this","getData","fetch","then","results","json","responceJson","setState","planes","res","console","log","catch","error","className","length","map","item","key","id","name","come_from","come_to","registration_info","avia_company","speed","flight_distance","React","Component","Input","type","value","onChange","handleChange","placeholder","onKeyDown","disableSpaces","Login","useState","onSubmit","event","preventDefault","axios","method","url","data","response","currentValue","target","prevState","Default","App","path","exact","component","Form","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6e683c8f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nclass FetchData extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            flights: [],\r\n            previous : []\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getData();\r\n    }\r\n\r\n    // http://127.0.0.1:8000/api/v1/flights\r\n\r\n    getData() {\r\n        fetch('https://backend-261116.appspot.com/plane/')\r\n            .then(results => results.json())\r\n            .then((responceJson) => this.setState({flights: responceJson.planes}))\r\n            .then(res => console.log(this.state.flights))\r\n            .catch(error => console.log(error))\r\n    }\r\n\r\n    render(){\r\n        console.log(this.state.flights);\r\n        return (\r\n            <>\r\n            <h2 className=\"text-center p-4\">List of flights</h2>\r\n            <div className=\"container\">\r\n                <ul>\r\n                    {\r\n                        this.state.flights.length > 0\r\n                            ? this.state.flights.map(item => {\r\n                                return(\r\n                                    <div key={item.id}>\r\n                                        <li className=\"list-group\">\r\n                                            <ul className=\"p-3\">\r\n                                                <li className=\"list-group-item\"><h2>Name of flight - {item.name}</h2></li>\r\n                                                <li className=\"list-group-item\"><h4>Come from : {item.come_from}</h4></li>\r\n                                                <li className=\"list-group-item\"><h4>Come to : {item.come_to}</h4></li>\r\n                                                <li className=\"list-group-item\"><h4>Registration info : {item.registration_info}</h4></li>\r\n                                                <li className=\"list-group-item\"><p>Avia company is -  {item.avia_company}</p></li>\r\n                                                <li className=\"list-group-item\"><p>Speed - {item.speed}</p></li>\r\n                                                <li className=\"list-group-item\"><p>Flight distance - {item.flight_distance}</p></li>\r\n                                            </ul>\r\n                                        </li>\r\n                                    </div>\r\n                                )\r\n                            })\r\n                            : <p>No data</p>\r\n                    }\r\n                </ul>\r\n            </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FetchData;","import React from 'react';\r\n\r\nconst Input = (props) => {\r\n    return (\r\n        <div className=\"form-group\">\r\n            <input\r\n                className=\"form-control\"\r\n                id={props.name}\r\n                type={props.type}\r\n                value={props.value}\r\n                onChange={props.handleChange}\r\n                placeholder={props.placeholder}\r\n                onKeyDown={props.disableSpaces}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Input;\r\n","import React, {useState} from 'react';\r\nimport Input from \"./Input\";\r\nimport * as axios from 'axios';\r\n\r\nconst Login = props => {\r\n    const [state, setState] = useState({\r\n        name: '',\r\n        come_from: '',\r\n        come_to: '',\r\n        avia_company: '',\r\n        speed: '',\r\n        registration_info: '',\r\n        flight_distance: ''\r\n    });\r\n\r\n    const handleNameChange = event => {\r\n        const currentValue = event.target.value;\r\n        //const emailValid = props.validateValue(currentValue, /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/)\r\n        setState(prevState => ({\r\n            ...prevState, name: currentValue\r\n        }));\r\n    };\r\n\r\n    const handleComeFromChange = event => {\r\n        const currentValue = event.target.value;\r\n        // const passwordValid = props.validateValue(currentValue, /(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9]).{6,}$/)\r\n\r\n        setState(prevState => ({\r\n            ...prevState, come_from: currentValue\r\n        }))\r\n    };\r\n\r\n    const handleComeToChange = event => {\r\n        const currentValue = event.target.value;\r\n        // const passwordValid = props.validateValue(currentValue, /(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9]).{6,}$/)\r\n\r\n        setState(prevState => ({\r\n            ...prevState, come_to: currentValue\r\n        }))\r\n    };\r\n\r\n    const handleAviaCompanyChange = event => {\r\n        const currentValue = event.target.value;\r\n        // const passwordValid = props.validateValue(currentValue, /(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9]).{6,}$/)\r\n\r\n        setState(prevState => ({\r\n            ...prevState, avia_company: currentValue\r\n        }))\r\n    };\r\n\r\n    const handleSpeedChange = event => {\r\n        const currentValue = event.target.value;\r\n        // const passwordValid = props.validateValue(currentValue, /(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9]).{6,}$/)\r\n\r\n        setState(prevState => ({\r\n            ...prevState, speed: currentValue\r\n        }))\r\n    };\r\n\r\n    const handleRegistrationInfoChange = event => {\r\n        const currentValue = event.target.value;\r\n        // const passwordValid = props.validateValue(currentValue, /(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9]).{6,}$/)\r\n\r\n        setState(prevState => ({\r\n            ...prevState, registration_info: currentValue\r\n        }))\r\n    };\r\n\r\n    const handleFlightDistanceChange = event => {\r\n        const currentValue = event.target.value;\r\n        // const passwordValid = props.validateValue(currentValue, /(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9]).{6,}$/)\r\n\r\n        setState(prevState => ({\r\n            ...prevState, flight_distance: currentValue\r\n        }))\r\n    };\r\n\r\n\r\n    const handleSendData = event => {\r\n        event.preventDefault();\r\n        console.log(state);\r\n        axios({ method: 'post',\r\n                url: \"https://backend-261116.appspot.com/plane/\",\r\n                // withCredentials: true,\r\n            // name: '',\r\n            // come_from: '',\r\n            // come_to: '',\r\n            // avia_company: '',\r\n            // speed: '',\r\n            // registration_info: '',\r\n            // flight_distance: ''\r\n                data: {name: state.name,\r\n                    come_from: state.come_from,\r\n                    come_to: state.come_to,\r\n                    avia_company: state.avia_company,\r\n                    speed: state.speed,\r\n                    registration_info: state.registration_info,\r\n                    flight_distance: state.flight_distance}\r\n        })\r\n            .then(response => console.log(response))\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2 className=\"text-center\">Data form</h2>\r\n            <form className=\"container\" onSubmit={handleSendData}>\r\n                <Input\r\n                    className=\"form-group\"\r\n                    value={state.name}\r\n                    placeholder={'Enter name of flight'}\r\n                    handleChange={handleNameChange}\r\n                    />\r\n\r\n                <Input\r\n                    className=\"form-group\"\r\n                    value={state.come_from}\r\n                    placeholder={'Come from '}\r\n                    handleChange={handleComeFromChange}\r\n                    />\r\n\r\n                <Input\r\n                    className=\"form-group\"\r\n                    value={state.come_to}\r\n                    placeholder={'Come to '}\r\n                    handleChange={handleComeToChange}\r\n                    />\r\n\r\n                <Input\r\n                    className=\"form-group\"\r\n                    value={state.avia_company}\r\n                    placeholder={'Avia company'}\r\n                    handleChange={handleAviaCompanyChange}\r\n                />\r\n\r\n                <Input\r\n                    className=\"form-group\"\r\n                    value={state.speed}\r\n                    placeholder={'Speed'}\r\n                    handleChange={handleSpeedChange}\r\n                />\r\n\r\n                <Input\r\n                    className=\"form-group\"\r\n                    value={state.registration_info}\r\n                    placeholder={'Registration Info'}\r\n                    handleChange={handleRegistrationInfoChange}\r\n                />\r\n\r\n                <Input\r\n                    className=\"form-group\"\r\n                    value={state.flight_distance}\r\n                    placeholder={'Flight distance'}\r\n                    handleChange={handleFlightDistanceChange}\r\n                />\r\n\r\n\r\n                <div className=\"text-center\">\r\n                    <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Login;\r\n","import React from 'react';\r\n\r\nconst Default = (props) => {\r\n    return (\r\n        <div>\r\n            <h1>Your React App is active</h1>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Default;\r\n","import React from 'react';\nimport './App.css';\nimport FetchData from \"./components/FetchData\";\nimport {BrowserRouter, Route} from \"react-router-dom\";\nimport Form from \"./components/Form\";\nimport Input from \"./components/Input\";\nimport Default from \"./components/Default\";\n\nconst App = (props) => {\n  return(\n      <div>\n          <BrowserRouter>\n              <Route path={\"/\"} exact component={() => <Default/>}/>\n              <Route path=\"/data\" component={() => <FetchData/>}/>\n              <Route path=\"/form\" component={() => <Form/>}/>\n              <Route path=\"/input\" component={() => <Input/>}/>\n          </BrowserRouter>\n      </div>\n  );\n};\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}